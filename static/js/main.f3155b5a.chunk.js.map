{"version":3,"sources":["images sync /^/.*/.jpg$","images/davis.jpg","images/durant.jpg","images/giannis.jpg","images/harden.jpg","images/kawhi.jpg","images/lebron.jpg","images/luka.jpg","images/stephen.jpg","components/LuckyImage/index.js","App.js","data.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ClickableImage","props","src","image","name","onClick","statePlayers","player","require","App","useState","wins","setWins","losses","setLosses","alreadyClicked","setalreadyClicked","images","setImages","className","key","newImages","sort","a","b","Math","random","includes","newAlreadyClicked","push","length","handleClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qLAAA,IAAIA,EAAM,CACT,cAAe,GACf,eAAgB,GAChB,gBAAiB,GACjB,eAAgB,GAChB,cAAe,GACf,eAAgB,GAChB,aAAc,GACd,gBAAiB,IAIlB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,gBC7BpBU,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,8FCM5BC,G,MAJQ,SAACC,GAAD,OACrB,yBAAKC,IAAKD,EAAME,MAAOC,KAAMH,EAAMG,KAAMC,QAASJ,EAAMI,YCEpDC,ECLU,CACd,QACA,SACA,UACA,SACA,QACA,SACA,OACA,WDH2BrB,KAAI,SAACsB,GAAD,MAAa,CAC5CH,KAAMG,EACNL,IAAKM,MAAQ,YAAYD,EAAb,aAgDCE,EA7CH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA4BN,mBAASJ,GAArC,mBAAOW,EAAP,KAAeC,EAAf,KAoBA,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,6CACA,2EACA,qCAAWR,GACX,uCAAaE,GACb,6BACGI,EAAOhC,KAAI,SAACkB,GAAD,OACV,kBAAC,EAAD,CACEA,MAAOA,EAAMD,IACbkB,IAAKjB,EAAMC,KACXC,QAAS,kBA9BD,SAACD,GACnB,IAAMiB,EAAYJ,EAAOK,MAAK,SAACC,EAAGC,GAAJ,MAAU,GAAMC,KAAKC,YAEnD,GADAR,EAAUG,GACNN,EAAeY,SAASvB,GAC1BU,EAAUD,EAAS,GACnBG,EAAkB,QACb,CACL,IAAMY,EAAiB,YAAOb,GAC9Ba,EAAkBC,KAAKzB,GACnBwB,EAAkBE,SAAWb,EAAOa,QACtClB,EAAQD,EAAO,GACfK,EAAkB,KAElBA,EAAkBY,IAiBGG,CAAY5B,EAAMC,gBElC3B4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f3155b5a.chunk.js","sourcesContent":["var map = {\n\t\"./davis.jpg\": 15,\n\t\"./durant.jpg\": 16,\n\t\"./giannis.jpg\": 17,\n\t\"./harden.jpg\": 18,\n\t\"./kawhi.jpg\": 19,\n\t\"./lebron.jpg\": 20,\n\t\"./luka.jpg\": 21,\n\t\"./stephen.jpg\": 22\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 14;","module.exports = __webpack_public_path__ + \"static/media/davis.f7a32113.jpg\";","module.exports = __webpack_public_path__ + \"static/media/durant.6a1694c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/giannis.e7c19b57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/harden.dcb4a25a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kawhi.fb3780fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lebron.da97028c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/luka.4d3a7836.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stephen.a0a4d04a.jpg\";","import React from \"react\";\r\n\r\nconst ClickableImage = (props) => (\r\n  <img src={props.image} name={props.name} onClick={props.onClick} />\r\n);\r\n\r\nexport default ClickableImage;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport ClickableImage from \"./components/LuckyImage\";\r\nimport players from \"./data\";\r\n\r\nconst statePlayers = players.map((player) => ({\r\n  name: player,\r\n  src: require(`./images/${player}.jpg`),\r\n}));\r\n\r\nconst App = () => {\r\n  const [wins, setWins] = useState(0);\r\n  const [losses, setLosses] = useState(0);\r\n  const [alreadyClicked, setalreadyClicked] = useState([]);\r\n  const [images, setImages] = useState(statePlayers);\r\n\r\n  const handleClick = (name) => {\r\n    const newImages = images.sort((a, b) => 0.5 - Math.random());\r\n    setImages(newImages);\r\n    if (alreadyClicked.includes(name)) {\r\n      setLosses(losses + 1);\r\n      setalreadyClicked([]);\r\n    } else {\r\n      const newAlreadyClicked = [...alreadyClicked];\r\n      newAlreadyClicked.push(name);\r\n      if (newAlreadyClicked.length === images.length) {\r\n        setWins(wins + 1);\r\n        setalreadyClicked([]);\r\n      } else {\r\n        setalreadyClicked(newAlreadyClicked);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1> Memory Game!</h1>\r\n        <h2>Click each picture exactly one time to win!</h2>\r\n        <h3>Wins: {wins}</h3>\r\n        <h3>Losses: {losses}</h3>\r\n        <div>\r\n          {images.map((image) => (\r\n            <ClickableImage\r\n              image={image.src}\r\n              key={image.name}\r\n              onClick={() => handleClick(image.name)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const players = [\r\n  \"davis\",\r\n  \"durant\",\r\n  \"giannis\",\r\n  \"harden\",\r\n  \"kawhi\",\r\n  \"lebron\",\r\n  \"luka\",\r\n  \"stephen\",\r\n];\r\n\r\nexport default players;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}